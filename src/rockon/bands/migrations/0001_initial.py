# Generated by Django 4.2.7 on 2023-11-10 19:29

from __future__ import annotations

import uuid

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import rockon.bands.models.band_media
import rockon.library.guid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("rockonevent", "0001_initial"),
        ("rockoncrew", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Band",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "guid",
                    models.CharField(
                        default=rockon.library.guid.guid, max_length=255, unique=True
                    ),
                ),
                (
                    "slug",
                    models.SlugField(blank=True, default=None, null=True, unique=True),
                ),
                ("name", models.CharField(max_length=255)),
                ("has_management", models.BooleanField(default=False)),
                ("are_students", models.BooleanField(default=False)),
                (
                    "genre",
                    models.CharField(
                        blank=True, default=None, max_length=32, null=True
                    ),
                ),
                (
                    "federal_state",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("BW", "Baden-Württemberg"),
                            ("BY", "Bayern"),
                            ("BE", "Berlin"),
                            ("BB", "Brandenburg"),
                            ("HB", "Bremen"),
                            ("HH", "Hamburg"),
                            ("HE", "Hessen"),
                            ("MV", "Mecklenburg-Vorpommern"),
                            ("NI", "Niedersachsen"),
                            ("NW", "Nordrhein-Westfalen"),
                            ("RP", "Rheinland-Pfalz"),
                            ("SL", "Saarland"),
                            ("SN", "Sachsen"),
                            ("ST", "Sachsen-Anhalt"),
                            ("SH", "Schleswig-Holstein"),
                            ("TH", "Thüringen"),
                            ("XX", "Nicht in Deutschland"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                    ),
                ),
                ("homepage", models.URLField(blank=True, default=None, null=True)),
                ("facebook", models.URLField(blank=True, default=None, null=True)),
                ("cover_letter", models.TextField(blank=True, default=None, null=True)),
                (
                    "bid_status",
                    models.CharField(
                        choices=[
                            ("unknown", "Unbekannt"),
                            ("pending", "Bearbeitung"),
                            ("accepted", "Angenommen"),
                            ("declined", "Abgelehnt"),
                        ],
                        default="unknown",
                        max_length=32,
                    ),
                ),
                ("techrider", models.JSONField(blank=True, default=dict, null=True)),
                (
                    "contact",
                    models.OneToOneField(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="band",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bands",
                        to="rockonevent.event",
                    ),
                ),
            ],
            options={
                "ordering": ["created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Stage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                (
                    "event",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="rockonevent.event",
                    ),
                ),
            ],
            options={
                "ordering": ["created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TimeSlot",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("start", models.TimeField()),
                ("end", models.TimeField()),
                (
                    "band",
                    models.OneToOneField(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="slot",
                        to="rockonbands.band",
                    ),
                ),
                (
                    "day",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="timeslots",
                        to="rockoncrew.attendance",
                    ),
                ),
                (
                    "stage",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="timeslots",
                        to="rockonbands.stage",
                    ),
                ),
            ],
            options={
                "ordering": ["created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="BandMember",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "nutrition",
                    models.CharField(
                        choices=[
                            ("unknown", "Unbekannt"),
                            ("vegan", "Vegan"),
                            ("vegetarian", "Vegetarisch"),
                            ("omnivore", "Omnivor"),
                        ],
                        default="unknown",
                        max_length=12,
                    ),
                ),
                (
                    "position",
                    models.CharField(
                        choices=[
                            ("unknown", "Unbekannt"),
                            ("merch", "Merchandise"),
                            ("band", "Band"),
                            ("hand", "Stagehand"),
                            ("technican", "Techniker"),
                            ("support", "Support"),
                        ],
                        default="unknown",
                        max_length=12,
                    ),
                ),
                (
                    "band",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="band_members",
                        to="rockonbands.band",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="BandMedia",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "media_type",
                    models.CharField(
                        choices=[
                            ("unknown", "Unbekannt"),
                            ("document", "Dokument"),
                            ("audio", "Audio"),
                            ("link", "Link"),
                            ("press_photo", "Pressefoto"),
                            ("logo", "Logo"),
                        ],
                        default="unknown",
                        max_length=32,
                    ),
                ),
                ("url", models.URLField(blank=True, default=None, null=True)),
                (
                    "file",
                    models.FileField(
                        blank=True,
                        default=None,
                        null=True,
                        upload_to=rockon.bands.models.band_media.band_media_path,
                    ),
                ),
                (
                    "thumbnail",
                    models.ImageField(
                        blank=True, default=None, null=True, upload_to=""
                    ),
                ),
                (
                    "file_name_original",
                    models.CharField(
                        blank=True, default=None, max_length=512, null=True
                    ),
                ),
                (
                    "band",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="media",
                        to="rockonbands.band",
                    ),
                ),
            ],
            options={
                "ordering": ["band", "media_type", "created_at"],
            },
        ),
    ]
