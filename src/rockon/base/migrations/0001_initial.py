# Generated by Django 4.2.7 on 2023-11-11 11:24

from __future__ import annotations

import uuid

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import rockon.library.uploadandpathrename


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=511)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField()),
                ('start', models.DateField(help_text='Veranstaltung beginnt')),
                ('end', models.DateField(help_text='Veranstaltung endet')),
                ('setup_start', models.DateField(help_text='Aufbau beginnt')),
                ('setup_end', models.DateField(help_text='Aufbau endet')),
                ('opening', models.DateField(help_text='Erster Einlass')),
                ('closing', models.DateField(help_text='Ende der Veranstaltung')),
                ('teardown_start', models.DateField(help_text='Abbau beginnt')),
                ('teardown_end', models.DateField(help_text='Abbau endet')),
                ('location', models.CharField(max_length=255)),
                ('url', models.URLField(blank=True, null=True)),
                (
                    'image',
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=rockon.library.uploadandpathrename.UploadToPathAndRename(
                            'events'
                        ),
                    ),
                ),
                ('show_on_landing_page', models.BooleanField(default=False)),
                ('signup_is_open', models.BooleanField(default=True)),
                (
                    'signup_type',
                    models.CharField(
                        choices=[
                            ('unknown', 'Unbekannt'),
                            ('crew', 'Crew'),
                            ('exhibitor', 'Austeller'),
                        ],
                        default='unknown',
                        max_length=12,
                    ),
                ),
                ('is_current', models.BooleanField(default=False)),
                (
                    'sub_event_of',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='sub_events',
                        to='rockonbase.event',
                    ),
                ),
            ],
            options={
                'ordering': ['start'],
            },
        ),
        migrations.CreateModel(
            name='Sponsoring',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('comment', models.CharField(max_length=511)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('comment', models.CharField(max_length=511)),
            ],
            options={
                'ordering': ['created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Timeline',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('comment', models.CharField(max_length=511)),
            ],
            options={
                'ordering': ['created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                (
                    'nick_name',
                    models.CharField(
                        blank=True, default=None, max_length=255, null=True
                    ),
                ),
                ('email_is_verified', models.BooleanField(default=False)),
                (
                    'phone',
                    models.CharField(
                        blank=True, default=None, max_length=255, null=True
                    ),
                ),
                (
                    'address',
                    models.CharField(
                        blank=True, default=None, max_length=255, null=True
                    ),
                ),
                (
                    'address_extension',
                    models.CharField(
                        blank=True, default=None, max_length=255, null=True
                    ),
                ),
                (
                    'address_housenumber',
                    models.CharField(
                        blank=True, default=None, max_length=255, null=True
                    ),
                ),
                (
                    'zip_code',
                    models.CharField(
                        blank=True, default=None, max_length=255, null=True
                    ),
                ),
                (
                    'place',
                    models.CharField(
                        blank=True, default=None, max_length=255, null=True
                    ),
                ),
                ('comment', models.TextField(blank=True, default=None, null=True)),
                ('birthday', models.DateField(blank=True, default=None, null=True)),
                (
                    'internal_comment',
                    models.TextField(blank=True, default=None, null=True),
                ),
                (
                    'account_context',
                    models.CharField(
                        blank=True,
                        choices=[
                            ('unknown', 'Unknown'),
                            ('band', 'Band'),
                            ('crew', 'Crew'),
                            ('exhibitor', 'Exhibitor'),
                        ],
                        default='unknown',
                        max_length=255,
                    ),
                ),
                (
                    'events',
                    models.ManyToManyField(
                        blank=True, default=None, to='rockonbase.event'
                    ),
                ),
                (
                    'user',
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='profile',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'ordering': ['created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Organisation',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('org_name', models.CharField(max_length=255)),
                (
                    'org_address',
                    models.CharField(
                        blank=True, default=None, max_length=511, null=True
                    ),
                ),
                (
                    'org_house_number',
                    models.CharField(
                        blank=True, default=None, max_length=31, null=True
                    ),
                ),
                (
                    'org_address_extension',
                    models.CharField(
                        blank=True, default=None, max_length=511, null=True
                    ),
                ),
                (
                    'org_zip',
                    models.CharField(
                        blank=True, default=None, max_length=31, null=True
                    ),
                ),
                (
                    'org_place',
                    models.CharField(
                        blank=True, default=None, max_length=255, null=True
                    ),
                ),
                (
                    'internal_comment',
                    models.TextField(blank=True, default=None, null=True),
                ),
                (
                    'members',
                    models.ManyToManyField(
                        default=None,
                        related_name='organisations',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'ordering': ['org_name'],
            },
        ),
        migrations.CreateModel(
            name='MagicLink',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('token', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('expires_at', models.DateTimeField()),
                (
                    'user',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='magic_links',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'ordering': ['user', 'expires_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailVerification',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('token', models.UUIDField(default=uuid.uuid4, editable=False)),
                (
                    'new_email',
                    models.EmailField(default=None, max_length=1024, null=True),
                ),
                ('is_active', models.BooleanField(default=True)),
                (
                    'user',
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='email_verification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'ordering': ['user'],
            },
        ),
    ]
