# Generated by Django 4.2.7 on 2023-11-10 19:29

from __future__ import annotations

import uuid

import django.db.models.deletion
from django.db import migrations, models

import rockon.library.uploadandpathrename


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Task",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("comment", models.CharField(max_length=511)),
            ],
            options={
                "ordering": ["created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Timeline",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("comment", models.CharField(max_length=511)),
            ],
            options={
                "ordering": ["created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=511)),
                ("slug", models.SlugField(unique=True)),
                ("description", models.TextField()),
                ("start", models.DateField(help_text="Veranstaltung beginnt")),
                ("end", models.DateField(help_text="Veranstaltung endet")),
                ("setup_start", models.DateField(help_text="Aufbau beginnt")),
                ("setup_end", models.DateField(help_text="Aufbau endet")),
                ("opening", models.DateField(help_text="Erster Einlass")),
                ("closing", models.DateField(help_text="Ende der Veranstaltung")),
                ("teardown_start", models.DateField(help_text="Abbau beginnt")),
                ("teardown_end", models.DateField(help_text="Abbau endet")),
                ("location", models.CharField(max_length=255)),
                ("url", models.URLField(blank=True, null=True)),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=rockon.library.uploadandpathrename.UploadToPathAndRename(
                            "events"
                        ),
                    ),
                ),
                ("show_on_landing_page", models.BooleanField(default=False)),
                ("signup_is_open", models.BooleanField(default=True)),
                (
                    "signup_type",
                    models.CharField(
                        choices=[
                            ("unknown", "Unbekannt"),
                            ("crew", "Crew"),
                            ("exhibitor", "Austeller"),
                        ],
                        default="unknown",
                        max_length=12,
                    ),
                ),
                ("is_current", models.BooleanField(default=False)),
                (
                    "sub_event_of",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sub_events",
                        to="rockonevent.event",
                    ),
                ),
            ],
            options={
                "ordering": ["start"],
            },
        ),
    ]
