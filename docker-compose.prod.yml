version: "3.8"

services:
  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_INITDB_ARGS: ${POSTGRES_INITDB_ARGS}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PGTZ: ${POSTGRES_PGTZ}
      POSTGRES_TZ: ${POSTGRES_TZ}
      POSTGRES_USER: ${POSTGRES_USER}
    volumes:
      - postgres-data:/var/lib/postgresql/data:rw
    networks:
      - rockon
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 6

  app:
    image: ghcr.io/clabs/rockon:${IMAGE_VERSION}
    env_file: .env
    environment:
      STARTMODE: app
    restart: unless-stopped
    depends_on:
      - postgres
    networks:
      - rockon

  qcluster:
    image: ghcr.io/clabs/rockon:${IMAGE_VERSION}
    env_file: .env
    environment:
      STARTMODE: qcluster
    restart: unless-stopped
    depends_on:
      - postgres
    networks:
      - rockon

  redis:
    image: redis:7
    restart: unless-stopped
    volumes:
      - redis-data:/data:rw
    networks:
      - rockon
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 10s
      timeout: 3s
      retries: 5

volumes:
  postgres-data:

networks:
  rockon:
